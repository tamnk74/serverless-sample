# Service
service: kouticket

# plugins
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: ap-northeast-1
  environment: ${file(env.yml):environment}

# custom
custom:
  serverless-offline:
    port: 4000
  # splitStacks:
  #   perFunction: true
  #   perType: true
  webpack:
    webpackConfig: ./webpack.config.js

  webpackIncludeModules:
      forceInclude:
        - pg
  # originHeader:
  #   - ${file(env.yml):originHeader.DOMAIN_DEV}
  #   - ${file(env.yml):originHeader.DOMAIN_STG}
  #   - ${file(env.yml):originHeader.DOMAIN_PROD}
  #   - ${file(env.yml):originHeader.DOMAIN_LOCAL}
  headersHeader:
    - Content-Type
    - X-Amz-Date
    - Authorization
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - Access-Control-Allow-Origin
    - Access-Control-Allow-Credentials
    - Access-Control-Allow-Headers

functions:
  authorize:
    handler: middleware/Authentication.handler
  app:
    handler: controller/HomeController.index
    name: homepage
    events:
      - http: 
          path: /
          method: get

  login:
    handler: controller/AuthController.login
    name: login
    events:
      - http:
          path: /api/login
          method: post
          cors: true

  getUser:
    handler: controller/AuthController.getUser
    name: getUser
    events:
      - http:
          path: /api/auth/getUser
          method: get
          cors: true
          authorizer:
            name: authorize
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token

resources:
  Resources:
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'

